// MedicalEdu Database Schema for dbdiagram.io
// Copy and paste this into https://dbdiagram.io/d

Table users {
  id uuid [pk]
  name varchar(100) [not null]
  email varchar(254) [not null, unique]
  password_hash varchar(255) [not null]
  role user_role [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp
  is_active boolean [not null, default: true]
  email_confirmed boolean [not null, default: false]
  email_confirmation_token varchar(255)
  email_confirmation_token_expiry timestamp
  time_zone varchar(50)
  phone_number varchar(20)
  profile_picture_url text
}

Table courses {
  id uuid [pk]
  instructor_id uuid [not null, ref: > users.id]
  title varchar(200) [not null]
  description text
  is_published boolean [not null, default: false]
  price decimal(10,2)
  thumbnail_url text
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp
}

Table course_materials {
  id uuid [pk]
  course_id uuid [not null, ref: > courses.id]
  title varchar(200) [not null]
  description text
  file_url text [not null]
  file_name varchar(255) [not null]
  content_type varchar(100) [not null]
  file_size_bytes bigint [not null]
  "order" int [not null]
  is_free boolean [not null, default: false]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp
}

Table availability_slots {
  id uuid [pk]
  course_id uuid [not null, ref: > courses.id]
  instructor_id uuid [not null, ref: > users.id]
  start_time_utc timestamp [not null]
  end_time_utc timestamp [not null]
  is_booked boolean [not null, default: false]
  price decimal(10,2) [not null]
  notes text
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp
}

Table bookings {
  id uuid [pk]
  course_id uuid [not null, ref: > courses.id]
  student_id uuid [not null, ref: > users.id]
  instructor_id uuid [not null, ref: > users.id]
  availability_slot_id uuid [not null, ref: > availability_slots.id]
  status booking_status [not null, default: 'pending']
  amount decimal(10,2) [not null]
  student_notes text
  instructor_notes text
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp
  confirmed_at timestamp
  cancelled_at timestamp
  cancellation_reason text
}

Table payments {
  id uuid [pk]
  booking_id uuid [not null, ref: > bookings.id]
  user_id uuid [not null, ref: > users.id]
  amount decimal(10,2) [not null]
  currency varchar(3) [not null]
  status payment_status [not null, default: 'pending']
  provider payment_provider [not null]
  provider_transaction_id varchar(255) [not null]
  provider_payment_intent_id varchar(255)
  provider_metadata json
  failure_reason text
  created_at timestamp [not null, default: `now()`]
  processed_at timestamp
  refunded_at timestamp
  refund_amount decimal(10,2)
}

Table enrollments {
  id uuid [pk]
  student_id uuid [not null, ref: > users.id]
  course_id uuid [not null, ref: > courses.id]
  enrolled_at timestamp [not null, default: `now()`]
  is_active boolean [not null, default: true]
  progress_percentage int [not null, default: 0]
  completed_at timestamp
  updated_at timestamp
}

Table notifications {
  id uuid [pk]
  user_id uuid [not null, ref: > users.id]
  type notification_type [not null]
  title varchar(200) [not null]
  message text [not null]
  is_read boolean [not null, default: false]
  email_sent boolean [not null, default: false]
  email_sent_at timestamp
  related_entity_id uuid
  related_entity_type varchar(50)
  metadata json
  created_at timestamp [not null, default: `now()`]
  read_at timestamp
}

Table audit_logs {
  id uuid [pk]
  entity_name varchar(100) [not null]
  entity_id varchar(50) [not null]
  action audit_action_type [not null]
  user_id uuid [ref: > users.id]
  ip_address varchar(45)
  user_agent varchar(500)
  old_values json
  new_values json
  metadata json
  created_at timestamp [not null, default: `now()`]
}

// Enums
Enum user_role {
  admin
  instructor
  student
}

Enum booking_status {
  pending
  confirmed
  cancelled
  completed
  no_show
}

Enum payment_status {
  pending
  succeeded
  failed
  cancelled
  refunded
}

Enum payment_provider {
  stripe
  paypal
}

Enum notification_type {
  booking_confirmation
  booking_reminder
  booking_cancellation
  payment_confirmation
  payment_failed
  course_published
  email_verification
  password_reset
  general_announcement
  booking_rescheduled
  course_updated
}

Enum audit_action_type {
  create
  update
  delete
  login
  logout
  email_confirmation
  password_reset
}

// Indexes for performance
Indexes {
  (users.email) [unique]
  (users.role)
  (users.email_confirmed)
  (courses.instructor_id)
  (courses.is_published)
  (courses.is_published, courses.created_at)
  (course_materials.course_id)
  (course_materials.course_id, course_materials.order)
  (availability_slots.instructor_id)
  (availability_slots.course_id)
  (availability_slots.is_booked, availability_slots.start_time_utc)
  (availability_slots.start_time_utc)
  (bookings.student_id)
  (bookings.instructor_id)
  (bookings.status)
  (bookings.availability_slot_id)
  (payments.booking_id)
  (payments.provider_transaction_id)
  (payments.status)
  (enrollments.student_id, enrollments.course_id) [unique]
  (enrollments.student_id)
  (enrollments.course_id)
  (notifications.user_id)
  (notifications.type)
  (notifications.is_read)
  (audit_logs.entity_name)
  (audit_logs.entity_id)
  (audit_logs.user_id)
  (audit_logs.created_at)
} 